[tool.poetry]
name = "pyproject-toml"
version = "0.1.0"
description = "Checkbox"
authors = ["Sergey Polischuk <polischuk0107@gmail.com>"]
readme = "README.md"
packages = [{include = "pyproject"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
sqlalchemy = "^2.0.29"
psycopg2-binary = "^2.9.9"
psycopg = {extras = ["binary"], version = "^3.1.13"}
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
sqlmodel = "^0.0.16"
bcrypt = "4.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
types-python-jose = "^3.3.4.20240106"
types-passlib = "^1.7.7.20240106"
coverage = "^7.4.3"
pytest-asyncio = "^0.15.1"
factory_boy = "^3.2.0"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true